env HOME=$WORK/home

! benchinit -benchtime=10x ./withtempfile
stderr '_test\.go.* already exists'

exec chmod a-w readonlydir
! benchinit -benchtime=10x ./readonlydir
stderr 'permission denied'

! benchinit -benchtime=10x ./missingpkg
stderr 'cannot find package'

! benchinit -benchtime=10x ./missingpkg
stderr 'cannot find package'

benchinit -benchtime=10x ./onlytestfiles
! stdout '^BenchmarkInit' # nothing to benchmark
stdout 'ok\s*test.tld/foo/onlytestfiles'

! benchinit -benchtime=10x ./withbenchmarkinit
stderr 'BenchmarkInit redeclared'

-- go.mod --
module test.tld/foo
-- withtempfile/empty.go --
package foo
-- withtempfile/benchinit_generated_test.go --
package foo

var s = "very important work we cannot delete"
-- readonlydir/empty.go --
package foo
-- onlytestfiles/empty_test.go --
package foo
-- withbenchmarkinit/empty.go --
package foo
-- withbenchmarkinit/bench_test.go --
package foo_test

import "testing"

func BenchmarkInit(b *testing.B) {
}
